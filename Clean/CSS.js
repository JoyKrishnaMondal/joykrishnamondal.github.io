// Generated by LiveScript 1.3.1
(function(){
  var Main, MaxWidth, MaxHeight, RatioOfGraph, CorrectRatioofHeight, CorrectRatioOfWidth, TM;
  Main = {};
  MaxWidth = screen.availWidth;
  MaxHeight = screen.availHeight;
  RatioOfGraph = 640 / 480;
  CorrectRatioofHeight = 1 - 0.01;
  CorrectRatioOfWidth = 1 - 0.02;
  Main.BorderColor = "#9C9C9C";
  TM = require("./headers.js").TM;
  Main.Init = function(){
    var RealHeight, RealWidth, WidthOfGraph, Remaining, ButtonFont, BetweenGraphAndSizePad, BetweenTopGraphAndBut, WidthOfStatusTable, WidthOfNumber, HeightOfEachRow, BetweenStatusAndInput, Ratio;
    RealHeight = CorrectRatioofHeight * window.innerHeight;
    RealWidth = CorrectRatioOfWidth * window.innerWidth;
    WidthOfGraph = Math.round(RealHeight * RatioOfGraph);
    Remaining = Math.round(RealWidth - WidthOfGraph);
    this.Graph = {
      height: RealHeight,
      width: WidthOfGraph,
      borderStyle: "solid",
      borderColor: this.BorderColor,
      borderWidth: "1px",
      position: "absolute"
    };
    ButtonFont = {
      fontFamily: "MyButtonFont"
    };
    this.FourButton = {
      float: "left"
    };
    BetweenGraphAndSizePad = 5;
    BetweenTopGraphAndBut = 5;
    this.TableElm = {
      paddingBottom: "3px",
      textAlign: "center",
      borderStyle: "solid"
    };
    this.TableOfInputMain = {
      top: RealHeight * 0.25,
      position: "absolute",
      left: Remaining * (1 / 3) + WidthOfGraph + 6
    };
    WidthOfStatusTable = (2 / 3) * Remaining - 3;
    WidthOfNumber = Math.round(0.4 * Remaining);
    HeightOfEachRow = RealHeight * 0.70 / 15;
    BetweenStatusAndInput = RealHeight * 0.01;
    this.SideBar = {
      left: WidthOfGraph + BetweenGraphAndSizePad,
      width: Remaining,
      position: "absolute",
      fontFamily: "MyButtonFont",
      fontSize: "15pt"
    };
    this.TableOfInput = {
      left: WidthOfGraph + BetweenGraphAndSizePad,
      top: HeightOfEachRow * 3 + BetweenStatusAndInput,
      width: Remaining,
      position: "absolute",
      fontFamily: "MyButtonFont",
      fontSize: "15pt"
    };
    this.FirstRow = {
      width: (2 / 3) * Remaining,
      height: HeightOfEachRow,
      textAlign: "center"
    };
    this.SecondRow = {
      width: Remaining * (1 / 3),
      height: HeightOfEachRow - 1,
      textAlign: "center",
      textDecoration: "none",
      borderStyle: "none",
      outline: "none",
      display: "block"
    };
    this.SelectInner = {
      width: Remaining / 3 - 3,
      left: (2 / 3) * Remaining + 20,
      height: HeightOfEachRow + 2,
      paddingLeft: "0%"
    };
    this.UpperCamera = {
      top: RealHeight * (0.71 + 0.01),
      left: WidthOfGraph + BetweenGraphAndSizePad,
      position: "absolute"
    };
    this.CameraName = {
      height: HeightOfEachRow,
      borderStyle: "none",
      width: Remaining * (2 / 3) + 3,
      float: "left",
      "display": "-webkit-box",
      "-webkit-box-pack": "center",
      "-webkit-box-align": "center"
    };
    this.CameraShell = {
      width: Remaining,
      height: HeightOfEachRow + 2,
      fontSize: "13pt"
    };
    this.ButtonOuter = {
      paddingBottom: "3px",
      paddingLeft: "3px"
    };
    this.ButtonInner = {
      width: Remaining / 3 - 2 - 3,
      2: false,
      fontFamily: "MyButtonFont",
      borderRadius: "2px",
      height: 0.158 * RealHeight / 3,
      borderColor: this.BorderColor,
      borderWidth: "1px",
      borderStyle: "solid",
      fontSize: "10pt",
      "display": "-webkit-box",
      "-webkit-box-pack": "center",
      "-webkit-box-align": "center",
      "-webkit-user-select": "none",
      "-khtml-user-select": "none",
      "-moz-user-select": "none",
      "-o-user-select": "none",
      "user-select": "none",
      cursor: "default"
    };
    this.DummyClear = {
      width: Remaining,
      height: "8px"
    };
    this.StatusTable = {
      borderColor: this.BorderColor,
      borderWidth: "1px",
      borderStyle: "solid"
    };
    this.TR = {
      paddingBottom: "100px"
    };
    this.OnFocus = function(Elem){
      var ChangeCSS;
      ChangeCSS = {
        borderColor: "#0099CC",
        boxShadow: "0 0 4px outset",
        borderRadius: "7px",
        borderStyle: "solid"
      };
      app.StopRedraw = true;
      TM.to(Elem.srcElement, 0.1, ChangeCSS);
    };
    this.TableBlur = function(Elem){
      var ChangeCSS;
      ChangeCSS = {
        borderColor: "rgb(255,255,255)",
        boxShadow: "0 0 0",
        borderStyle: "none"
      };
      app.StopRedraw = false;
      TM.to(Elem.srcElement, 0.1, ChangeCSS);
    };
    this.ErrorMessage = {
      height: "20%",
      position: "absolute",
      backgroundColor: "#CC3300",
      boxShadow: "0 0 10px",
      width: "100%",
      borderStyle: "none",
      top: "40%",
      "-webkit-filter": "blur(2px)",
      "-moz-filter": "blur(2px)",
      left: "1%",
      zIndex: "0"
    };
    this.ErrorText = {
      height: "20%",
      fontFamily: "MyButtonFont",
      position: "absolute",
      width: "100%",
      textAlign: "center",
      fontSize: "14pt",
      top: "48%",
      "-webkit-filter": "blur(0px)",
      "-moz-filter": "blur(0px)",
      zIndex: "0",
      color: "rgb(255,255,255)"
    };
    this.InverseColor = function(Elem){
      TM.to(Elem.srcElement, 0.2, {
        backgroundColor: "#0099CC",
        color: "rgb(255,255,255)"
      });
    };
    this.BackToNormal = function(Elem){
      TM.to(Elem.srcElement, 0.2, {
        backgroundColor: "rgb(255,255,255)",
        color: "rgb(0,0,0)"
      });
    };
    this.ClickAnimation = function(Elem){
      var ChangeCSS, ChangeCSSBack;
      ChangeCSS = {
        backgroundColor: "#4A708B"
      };
      ChangeCSSBack = {
        backgroundColor: "#0099CC",
        color: "rgb(255,255,255)"
      };
      TM.to(Elem.srcElement, 0.05, ChangeCSS);
      setTimeout(function(){
        return TM.to(Elem.srcElement, 0.2, ChangeCSSBack);
      }, 50);
    };
    Ratio = 1;
    this.DummyCanvas = {
      height: 480,
      width: 640,
      display: "none"
    };
    this.Video = {
      height: 480,
      width: 640,
      position: "absolute",
      display: "none"
    };
    this.ViewCanvas = {
      height: RealHeight,
      width: WidthOfGraph,
      borderStyle: "solid",
      borderColor: this.BorderColor,
      borderWidth: "1px",
      position: "absolute"
    };
  };
  Main.Init();
  window.MyCSS = Main;
}).call(this);
